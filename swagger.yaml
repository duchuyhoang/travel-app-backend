openapi: 3.0.3
info:
  version: "1.0.1"
  title: Travel app api
  description: "Travel app api local api list"
servers:
  - url: http://localhost:3002

tags:
  - name: user
    description: "Authentication router"
  - name: media
    description: "Media service"
  - name: tags
    description: "Tags router"
  - name: post
    description: "Post router"

paths:
  /user/signUp:
    post:
      tags:
        - user
      summary: Signup

      requestBody:
        description: Signup body
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  nullable: false
                password:
                  type: string
                name:
                  type: string
                mobile:
                  type: string
                  nullable: true
                info:
                  type: string
                  nullable: true
                avatar:
                  type: string
                  format: binary
      responses:
        "201":
          description: Create account success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Created
        "400":
          description: Other error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#components/schemas/ValidationError"
                  - $ref: "#components/schemas/UnexpectedError"

  /user/login:
    post:
      tags:
        - user
      summary: Login

      requestBody:
        description: Login body
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        "200":
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  message:
                    type: string

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unexpected error
        "400":
          description: Other error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#components/schemas/ValidationError"
                  - $ref: "#components/schemas/UnexpectedError"

  /user/loginSocial:
    post:
      tags:
        - user
      summary: Login social

      requestBody:
        description: Login social body
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                method:
                  type: string
                  enum:
                    - FB
                    - GOOGLE

      responses:
        "200":
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  message:
                    type: string

        "400":
          description: Login social failed
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#components/schemas/ValidationError"
                  - $ref: "#components/schemas/UnexpectedError"

  /user/edit:
    patch:
      tags:
        - user
      summary: Edit user
      security:
        - BearerAuth: []

      requestBody:
        description: Edit profile body
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                mobile:
                  type: string
                  nullable: true
                info:
                  type: string
                  nullable: true
                avatar:
                  type: string
                  format: binary
      responses:
        "200":
          description: Edit succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

        "400":
          description: Cannot edit profile
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

  /media/upload:
    post:
      tags:
        - media
      summary: Upload media
      security:
        - BearerAuth: []

      requestBody:
        description: List files
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  description: List
                  discriminator:
                    propertyName: "xxxx"
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: Upload succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string

        "400":
          description: Cannot edit profile
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

  /post:
    get:
      tags:
        - post
      summary: Get posts

      security:
        - BearerAuth: []

      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: offset
          schema:
            type: integer

      responses:
        "200":
          description: Get list post succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      $ref: "#components/schemas/Post"
                  metadata:
                    type: object
                    $ref: "#components/schemas/Metadata"

        "400":
          description: Create post failed
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

    post:
      tags:
        - post
      summary: Create post
      security:
        - BearerAuth: []

      requestBody:
        description: List tags
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  description: List tags
                  items:
                    type: string
                content:
                  type: string
                  description: Post content(HTML)
                title:
                  type: string
                  description: Post title
      responses:
        "201":
          description: Create post succeed
          content:
            application/json:
              schema:
                type: object
                $ref: "#components/schemas/Post"

        "400":
          description: Create post failed
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

  /post/{id_post}:
    get:
      tags:
        - post
      summary: Get post by id
      parameters:
        - in: path
          name: id_post
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []

      responses:
        "200":
          description: Succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    $ref: "#components/schemas/Post"

        "400":
          description: Edit post failed
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

    patch:
      tags:
        - post
      summary: Edit post
      parameters:
        - in: path
          name: id_post
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []

      requestBody:
        description: Edit post
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  description: List tags
                  items:
                    type: string
                content:
                  type: string
                  description: Post content(HTML)
                title:
                  type: string
                  description: Post title
      responses:
        "200":
          description: Edit post succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Succeed

        "400":
          description: Edit post failed
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

    delete:
      tags:
        - post
      summary: Delete post by id
      parameters:
        - in: path
          name: id_post
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []

      responses:
        "200":
          description: Succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

        "400":
          description: Delete post failed
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

  /tag/:
    get:
      tags:
        - tags
      summary: Get tags
      security:
        - BearerAuth: []

      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: offset
          schema:
            type: integer

      responses:
        "200":
          description: List tags
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      $ref: "#components/schemas/Tag"
                  metadata:
                    type: object
                    $ref: "#components/schemas/Metadata"

        "400":
          description: Get tags failed
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"
    post:
      tags:
        - tags
      summary: Create tags
      security:
        - BearerAuth: []

      requestBody:
        description: List tags
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  description: List tags
                  items:
                    type: object
                    properties:
                      tag_name:
                        type: string
                      tag_description:
                        type: string

      responses:
        "201":
          description: Add tags succeed
          content:
            application/json:
              schema:
                type: object
                $ref: "#components/schemas/Tag"

        "400":
          description: Add tags failed
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

    delete:
      tags:
        - tags
      summary: Delete tags
      security:
        - BearerAuth: []

      requestBody:
        description: Delete tags
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  description: List tag ids
                  items:
                    type: number

      responses:
        "200":
          description: Delete tag succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Delete tags succeed

        "400":
          description: Delete tags failed
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          format: int64
          example: huy
        email:
          type: string
          format: email
          example: huy@gmail.com
        mobile:
          type: string
          nullable: true
          example: 0328640767
        info:
          type: string
          nullable: true
          example: Info
        avatar:
          type: string
          nullable: true
          example: Info
        permission:
          type: string
          example: USER
          enum:
            - USER
            - ADMIN
        method:
          type: string
          example: PASSWORD
          enum:
            - FB
            - GOOGLE
            - PASSWORD

    Tag:
      type: object
      properties:
        id_tag:
          type: integer
          format: int64
          example: 1
        tag_name:
          type: string
          example: Tag1
        tag_description:
          type: string
          example: Tag1 description
        del_flag:
          type: number
          example: 1

    Post:
      type: object
      properties:
        id_post:
          type: number
        author:
          type: object
          $ref: "#components/schemas/User"
        title:
          type: string
        slug:
          type: string
        content:
          type: string
        create_at:
          type: string
        del_flag:
          type: number
        status:
          type: string

    Metadata:
      type: object
      properties:
        total:
          type: number
        totalPage:
          type: number
        page:
          type: number
        limit:
          type: number
        hasMore:
          type: boolean

    ValidationError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
        message:
          type: string
        status:
          type: number

    UnauthorizedError:
      type: object
      properties:
        message:
          type: string
          example: Unauthorized
        status:
          type: number
          example: 403

    UnexpectedError:
      type: object
      properties:
        message:
          type: string
          example: Unexpected error
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
