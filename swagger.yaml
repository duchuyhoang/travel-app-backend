openapi: 3.0.3
info:
  version: "1.0.1"
  title: Travel app api
  description: "Travel app api local api list"
servers:
  - url: http://localhost:3002

tags:
  - name: user
    description: "Authentication router"
  - name: media
    description: "Media service"

paths:
  /user/signUp:
    post:
      tags:
        - user
      summary: Signup

      requestBody:
        description: Signup body
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  nullable: false
                password:
                  type: string
                name:
                  type: string
                mobile:
                  type: string
                  nullable: true
                info:
                  type: string
                  nullable: true
                avatar:
                  type: string
                  format: binary
      responses:
        "201":
          description: Create account success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Created
        "400":
          description: Other error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#components/schemas/ValidationError"
                  - $ref: "#components/schemas/UnexpectedError"

  /user/login:
    post:
      tags:
        - user
      summary: Login

      requestBody:
        description: Login body
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        "200":
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  message:
                    type: string

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unexpected error
        "400":
          description: Other error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#components/schemas/ValidationError"
                  - $ref: "#components/schemas/UnexpectedError"

  /user/loginSocial:
    post:
      tags:
        - user
      summary: Login social

      requestBody:
        description: Login social body
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                method:
                  type: string
                  enum:
                    - FB
                    - GOOGLE

      responses:
        "200":
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  message:
                    type: string

        "400":
          description: Login social failed
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#components/schemas/ValidationError"
                  - $ref: "#components/schemas/UnexpectedError"

  /user/edit:
    patch:
      tags:
        - user
      summary: Edit user
      security:
        - BearerAuth: []

      requestBody:
        description: Edit profile body
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                mobile:
                  type: string
                  nullable: true
                info:
                  type: string
                  nullable: true
                avatar:
                  type: string
                  format: binary
      responses:
        "200":
          description: Edit succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

        "400":
          description: Cannot edit profile
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

  /media/upload:
    post:
      tags:
        - media
      summary: Upload media
      security:
        - BearerAuth: []

      requestBody:
        description: List files
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  description: List
                  discriminator:
                    propertyName: "xxxx"
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: Upload succeed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string

        "400":
          description: Cannot edit profile
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnexpectedError"

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#components/schemas/UnauthorizedError"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          format: int64
          example: huy
        email:
          type: string
          format: email
          example: huy@gmail.com
        mobile:
          type: string
          nullable: true
          example: 0328640767
        info:
          type: string
          nullable: true
          example: Info
        avatar:
          type: string
          nullable: true
          example: Info
        permission:
          type: string
          example: USER
          enum:
            - USER
            - ADMIN
        method:
          type: string
          example: PASSWORD
          enum:
            - FB
            - GOOGLE
            - PASSWORD
    ValidationError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
        message:
          type: string
        status:
          type: number

    UnauthorizedError:
      type: object
      properties:
        message:
          type: string
          example: Unauthorized
        status:
          type: number
          example: 403

    UnexpectedError:
      type: object
      properties:
        message:
          type: string
          example: Unexpected error
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
